tosca_definitions_version: tosca_simple_yaml_1_0

imports:
#  - http://www.getcloudify.org/spec/cloudify/4.0/types.yaml
  - azure-plugin
  - aria-1.0
  
metadata:
  vendor: Amdocs
  csarVersion: v1.0
  csarProvider: Amdocs
  id: vLB_A
  version: v1.0
  csarType: NFAR
  name: vLB_A
  vnfdVersion: v1.0
  vnfmType: vnfm

topology_template:
  inputs:
    subscription_id:
      type: string
    tenant_id:
      type: string
    client_id:
      type: string
    client_secret:
      type: string
    use_existing_vm:
      default: False
      type: boolean
    pg_vm_name:
      type: string
      default: vPG
    lb_vm_name:
      type: string
      default: vLB
    dns_vm_name:
      type: string
      default: vDNS
    pg_mac:
      type: string
      default: 12:34:56:78:9a:bc
    vlb_mac:
      type: string
      default: 12:34:56:78:9a:bc
    location:
      default: eastus
      type: string
    vm_os_family:
      type: string
      default: linux
    vm_size:
      type: string
      default: Standard_B1S
    lb_vm_size:
      type: string
      default: Standard_D4
    vm_image_publisher:
      type: string
      default: Canonical
    vm_image_offer:
      type: string
      default: UbuntuServer
    vm_image_sku:
      type: string
      default: 16.04-LTS
    vm_image_version:
      type: string
      default: latest
    vm_os_username:
      type: string
      default: ubuntu
    vm_os_password:
      type: string
      default: Qwertyuiop@@1
    vm_public_keys:
      default:
        keydata: { get_input: vm_public_key_data }
        path: { get_input: vm_public_key_path }
      type: aria.azure.datatypes.PublicKey
    vm_public_key_data:
      description: Public key content to pass to virtual machine
      type: string
    vm_public_key_path:
      description: Path to where public key will be used
      type: string
      default: /home/ubuntu/.ssh/authorized_keys
    vm_public_key_auth_only:
      type: boolean
      default: false
    retry_after:
      default: 30
      type: integer
      default: 8080
    lb_public_ip_dns_setting:
      default:
        domainNameLabel: { get_input: lb_azure_domain_name_label }
        fqdn: { get_input: lb_azure_domain_fqdn }
      type: aria.azure.datatypes.PublicIPAddressDnsSettings
    dns_public_ip_dns_setting :
      default:
        domainNameLabel: { get_input: dns_azure_domain_name_label }
        fqdn: { get_input: dns_azure_domain_fqdn }
      type: aria.azure.datatypes.PublicIPAddressDnsSettings
    pg_public_ip_dns_setting:
      default:
        domainNameLabel: { get_input: pg_azure_domain_name_label }
        fqdn: { get_input: pg_azure_domain_fqdn }
      type: aria.azure.datatypes.PublicIPAddressDnsSettings
    use_existing_resource_group:
      default: False 
      type: boolean
    use_existing_security_group:
      default: False
      type: boolean
    use_existing_public_subnet:
      default: False
      type: boolean
    use_existing_vlb_vdns_subnet:
      default: False
      type: boolean
    use_existing_vpg_vlb_subnet:
      default: False
      type: boolean
    use_existing_virtual_network:
      default: False
      type: boolean
    azure_configuration:
      default:
        subscription_id: { get_input: subscription_id }
        tenant_id: { get_input: tenant_id }
        client_id: { get_input: client_id }
        client_secret: { get_input: client_secret }
      type: aria.azure.datatypes.Config
    pg_azure_domain_name_label:
      default: vpgtestapp
      type: string
    pg_azure_domain_fqdn:
      type: string
      default: vpgtestapp.eastus.cloudapp.azure.com
    lb_azure_domain_name_label:
      default: vlbtestapp
      type: string
    lb_azure_domain_fqdn:
      type: string
      default: vlbtestapp.eastus.cloudapp.azure.com
    dns_azure_domain_name_label:
      default: vdnstestapp
      type: string
    dns_azure_domain_fqdn:
      type: string
      default: vdnstestapp.eastus.cloudapp.azure.com
    azure_storage_account:
      type: string
      default: onapvlbstorage
    azure_security_group:
      type: string
      default: vlb_network_security_group
    azure_virtual_private_subnet_name:
      type: string
      default: onap-virtual-public-vsubnet
    azure_virtual_private_network_cidr:
      type: string
    azure_virtual_vlb_vdns_subnet_name:
      type: string
      default: onap-vlb-vdns-vsubnet
    azure_virtual_network_name:
      type: string
      default: onap-virtual-private-vnet
    azure_virtual_network_cidr:
      type: string
      default: 172.23.0.0/16
    azure_virtual_vpg_vlb_subnet_name:
      type: string
      default: onap-vpg-vlb-vsubnet
    azure_virtual_vpg_vlb_network_cidr:
      type: string
    cloud_env:
      type: string
    vdns_private_ip_1:
      type: string
    azure_virtual_vlb_vdns_network_cidr:
      type: string
    azure_resource_group_name:
      type: string
      default: vlb-rg
    vlb_private_ip_2:
      type: string
    pg_int:
      type: string
      default: 172.23.9.109
    vip:
      type: string
      default: 172.23.9.112
    gre_ipaddr:
      type: string
      default: 172.23.10.11
    vlb_private_ip_1:
      type: string
    repo_url_blob:
      type: string
    install_script_version:
      type: string
    vlb_private_ip_0:
      type: string
    vdns_private_ip_0:
      type: string
    dcae_collector_ip:
      type: string
    dcae_collector_port:
      type: integer
    repo_url_artifacts:
      type: string
    demo_artifacts_version:
      type: string
    vpg_private_ip_1:
      type: string
    vpg_private_ip_0:
      type: string
    vm_resource_config_hardware_profile:
      default:
        vmSize: { get_input: vm_size }
      type: aria.azure.datatypes.HardwareProfile
    lb_vm_resource_config_hardware_profile:
      default:
        vmSize: { get_input: lb_vm_size }
      type: aria.azure.datatypes.HardwareProfile
    vm_resource_config_storage_profile:
      default:
        imageReference:
          publisher: { get_input: vm_image_publisher }
          offer: { get_input: vm_image_offer }
          sku: { get_input: vm_image_sku }
          version: { get_input: vm_image_version }
      type: aria.azure.datatypes.StorageProfile
    onap_virtual_network_config:
      default:
        addressSpace:
          addressPrefixes: 
            - { get_input: azure_virtual_network_cidr }
      type: aria.azure.datatypes.VirtualNetworkConfig
    dns_vlb_vdns_ip_config:
      default:
        privateIPAddress: { get_input: vdns_private_ip_0 }
        privateIPAllocationMethod: Static
      type: aria.azure.datatypes.IPConfigurationConfig
    onap_virtual_vlb_vdns_subnet_config:
      default:
        addressPrefix: { get_input: azure_virtual_vlb_vdns_network_cidr }
      type: aria.azure.datatypes.SubnetConfig
    onap_virtual_vpg_vlb_subnet_config:
      default:
        addressPrefix: { get_input: azure_virtual_vpg_vlb_network_cidr }
      type: aria.azure.datatypes.SubnetConfig
    onap_virtual_public_subnet_config:
      default:
        addressPrefix: { get_input: azure_virtual_private_network_cidr }
      type: aria.azure.datatypes.SubnetConfig
    lb_vpg_vlb_ip_config:
      default:
        privateIPAddress: { get_input: vlb_private_ip_2 }
        privateIPAllocationMethod: Static
      type: aria.azure.datatypes.IPConfigurationConfig
    lb_vlb_vdns_ip_config:
      default:
        privateIPAddress: { get_input: vlb_private_ip_0 }
        privateIPAllocationMethod: Static
      type: aria.azure.datatypes.IPConfigurationConfig
    vpkg_vpg_vlb_ip_config:
      default:
        privateIPAddress: { get_input: vpg_private_ip_0 }
        privateIPAllocationMethod: Static
      type: aria.azure.datatypes.IPConfigurationConfig
   
    lb_vm_resource_config_os_profile:
      default:
        computerName: { get_input: lb_vm_name }
        adminUserName: { get_input: vm_os_username }
        adminPassword: { get_input: vm_os_password }
        linuxConfiguration:
          ssh:
            publicKeys: 
              - { get_input: vm_public_keys }
          disablePasswordAuthentication: { get_input: vm_public_key_auth_only }
      type: aria.azure.datatypes.OSProfile
    lb_vm_resource_config:
      default:
        hardwareProfile: { get_input: lb_vm_resource_config_hardware_profile }
        storageProfile: { get_input: vm_resource_config_storage_profile }
        osProfile: { get_input: lb_vm_resource_config_os_profile }
      type: aria.azure.datatypes.VirtualMachineConfig
    dns_vm_resource_config_os_profile:
      default:
        computerName: { get_input: dns_vm_name }
        adminUserName: { get_input: vm_os_username }
        adminPassword: { get_input: vm_os_password }
        linuxConfiguration:
          ssh:
            publicKeys: 
              - { get_input: vm_public_keys }
          disablePasswordAuthentication: { get_input: vm_public_key_auth_only }
      type: aria.azure.datatypes.OSProfile
    dns_vm_resource_config:
      default:
        hardwareProfile: { get_input: vm_resource_config_hardware_profile }
        storageProfile: { get_input: vm_resource_config_storage_profile }
        osProfile: { get_input: dns_vm_resource_config_os_profile }
      type: aria.azure.datatypes.VirtualMachineConfig
    pg_vm_resource_config_os_profile:
      default:
        computerName: { get_input: pg_vm_name }
        adminUserName: { get_input: vm_os_username }
        adminPassword: { get_input: vm_os_password }
        linuxConfiguration:
          ssh:
            publicKeys: 
              - { get_input: vm_public_keys }
          disablePasswordAuthentication: { get_input: vm_public_key_auth_only }
      type: aria.azure.datatypes.OSProfile
    pg_vm_resource_config:
      default:
        hardwareProfile: { get_input: vm_resource_config_hardware_profile }
        storageProfile: { get_input: vm_resource_config_storage_profile }
        osProfile: { get_input: pg_vm_resource_config_os_profile }
      type: aria.azure.datatypes.VirtualMachineConfig

    ssh_allow_rule:
      type: aria.azure.datatypes.NetworkSecurityRuleConfig
      default:  
        description: SSH access
        protocol: Tcp
        sourcePortRange: '*'
        destinationPortRange: '22'
        sourceAddressPrefix: '*'
        destinationAddressPrefix: '*'
        priority: 1001
        access: Allow
        direction: Inbound



  node_templates:
    onap_resource_group:
      type: aria.azure.nodes.ResourceGroup
      properties:
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_resource_group }
        name: { get_input: azure_resource_group_name }
        location: { get_input: location }

    onap_virtual_private_network:
      type: aria.azure.nodes.network.VirtualNetwork
      properties:
        name: { get_input: azure_virtual_network_name }
        resource_config: { get_input: onap_virtual_network_config }
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_virtual_network }
        resource_group_name: { get_input: azure_resource_group_name }
      requirements:
        - resource_group: onap_resource_group
        - storage_account: onap_storage_account
        
    onap_virtual_public_subnet:
      type: aria.azure.nodes.network.Subnet
      properties:
        name: { get_input: azure_virtual_private_subnet_name }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config: { get_input: onap_virtual_public_subnet_config }
        virtual_network_name: { get_input: azure_virtual_network_name }
        location: { get_input: location }
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_public_subnet }    
      requirements:
        - virtual_network: onap_virtual_private_network

    onap_virtual_vlb_vdns_subnet:
      type: aria.azure.nodes.network.Subnet
      properties:
        name: { get_input: azure_virtual_vlb_vdns_subnet_name }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config: { get_input: onap_virtual_vlb_vdns_subnet_config }
        virtual_network_name: { get_input: azure_virtual_network_name }
        location: { get_input: location }
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_vlb_vdns_subnet }    
      requirements:
        - virtual_network: onap_virtual_private_network
        - subnet_dependency: onap_virtual_public_subnet

    onap_virtual_vpg_vlb_subnet:
      type: aria.azure.nodes.network.Subnet
      properties:
        name: { get_input: azure_virtual_vpg_vlb_subnet_name }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config: { get_input: onap_virtual_vpg_vlb_subnet_config }
        virtual_network_name: { get_input: azure_virtual_network_name }
        location: { get_input: location }
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_vpg_vlb_subnet }    
      requirements:
        - virtual_network: onap_virtual_private_network
        - subnet_dependency: onap_virtual_vlb_vdns_subnet

    onap_network_security_group:
      type: aria.azure.nodes.network.NetworkSecurityGroup
      properties:
        name: { get_input: azure_security_group }
        location: { get_input: location }
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_security_group }
        resource_group_name: { get_input: azure_resource_group_name }
#        resource_config: { get_input: azure_network_security_group_config }
      requirements:
        - resource_group: onap_resource_group


        

    onap_ssh_allow_rule:
      type: aria.azure.nodes.network.NetworkSecurityRule
      properties:
        name: ssh_allow
        resource_group_name: { get_input: azure_resource_group_name }
        network_security_group_name: { get_input: azure_security_group }
        location: { get_input: location }
        resource_config: { get_input: ssh_allow_rule }
        azure_config: { get_input: azure_configuration }
      requirements:
        - resource_group: onap_resource_group
        - network_security_group: onap_network_security_group

    onap_storage_account:
      type: aria.azure.nodes.storage.StorageAccount
      properties:
        name: { get_input: azure_storage_account }
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        resource_group_name: { get_input: azure_resource_group_name }
        azure_config: { get_input: azure_configuration }
        use_external_resource: False
        resource_config:
          accountType: Standard_LRS
      requirements:
        - resource_group: onap_resource_group
        
    pg_management_public_ip:
      type: aria.azure.nodes.network.PublicIPAddress
      properties:
        name: pg_management_ip
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config:
          publicIPAllocationMethod: Dynamic
          dnsSettings: { get_input: pg_public_ip_dns_setting }
      requirements:
        - resource_group: onap_resource_group    

    lb_management_public_ip:
      type: aria.azure.nodes.network.PublicIPAddress
      properties:
        name: lb_management_ip
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config:
          publicIPAllocationMethod: Dynamic
          dnsSettings: { get_input: lb_public_ip_dns_setting }
      requirements:
        - resource_group: onap_resource_group

    dns_management_public_ip:
      type: aria.azure.nodes.network.PublicIPAddress
      properties:
        name: dns_management_ip
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config:
          publicIPAllocationMethod: Dynamic
          dnsSettings: { get_input: dns_public_ip_dns_setting }
      requirements:
        - resource_group: onap_resource_group
        
    onap_pkg_nic_management_public_ip_config:
      type: aria.azure.nodes.network.IPConfiguration
      properties:
        name: vpg_management_ip_config
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config:
          privateIPAllocationMethod: Dynamic
      requirements:
        - subnet: onap_virtual_public_subnet
        - ipaddress: pg_management_public_ip

    onap_vlb_nic_management_public_ip_config:
      type: aria.azure.nodes.network.IPConfiguration
      properties:
        name: vlb_management_ip_config
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config:
          privateIPAllocationMethod: Dynamic
      requirements:
        - subnet: onap_virtual_public_subnet
        - ipaddress: lb_management_public_ip

    onap_vdns_nic_management_public_ip_config:
      type: aria.azure.nodes.network.IPConfiguration
      properties:
        name: vdns_management_ip_config
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config:
          privateIPAllocationMethod: Dynamic
      requirements:
        - subnet: onap_virtual_public_subnet
        - ipaddress: dns_management_public_ip
        
    onap_pkg_nic_management_public:
      type: aria.azure.nodes.network.NetworkInterfaceCard
      properties:
        name: vpg_management_nic
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        resource_group_name: { get_input: azure_resource_group_name }
        primary: True
        resource_config:
          networkSecurityGroups: { get_input: azure_security_group }
          dnsSettings:
            internalDnsNameLabel: { get_input: pg_vm_name }
        use_external_resource: False
        azure_config: { get_input: azure_configuration }
      requirements:
        - resource_group: onap_resource_group
        - ip_config: onap_pkg_nic_management_public_ip_config
        - security_group: onap_network_security_group

    onap_vlb_nic_management_public:
      type: aria.azure.nodes.network.NetworkInterfaceCard
      properties:
        name: vlb_management_nic
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        resource_group_name: { get_input: azure_resource_group_name }
        primary: True
        resource_config:
          networkSecurityGroups: { get_input: azure_security_group }
          dnsSettings:
            internalDnsNameLabel: { get_input: lb_vm_name }
        use_external_resource: False
        azure_config: { get_input: azure_configuration }
      requirements:
        - resource_group: onap_resource_group
        - ip_config: onap_vlb_nic_management_public_ip_config
        - security_group: onap_network_security_group

    onap_vdns_nic_management_public:
      type: aria.azure.nodes.network.NetworkInterfaceCard
      properties:
        name: vdns_management_nic
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        resource_group_name: { get_input: azure_resource_group_name }
        primary: True
        resource_config:
          networkSecurityGroups: { get_input: azure_security_group }
          dnsSettings:
            internalDnsNameLabel: { get_input: dns_vm_name }
        use_external_resource: False
        azure_config: { get_input: azure_configuration }
      requirements:
        - resource_group: onap_resource_group
        - ip_config: onap_vdns_nic_management_public_ip_config
        - security_group: onap_network_security_group
        
    onap_vpkg_vpg_vlb_ip_config:
      type: aria.azure.nodes.network.IPConfiguration
      properties:
        name: vpkg_vpg_vlb_ip_config
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config: { get_input: vpkg_vpg_vlb_ip_config }
      requirements:
        - subnet: onap_virtual_vpg_vlb_subnet

    onap_vpkg_vpg_vlb_nic:
      type: aria.azure.nodes.network.NetworkInterfaceCard
      properties:
        name: vpkg_vpg_vlb_nic
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        resource_group_name: { get_input: azure_resource_group_name }
        primary: False
        resource_config:
          networkSecurityGroups: { get_input: azure_security_group }
          ipConfigurations: vpkg_vpg_vlb_ip_config
        use_external_resource: False
        azure_config: { get_input: azure_configuration }
      requirements:
        - resource_group: onap_resource_group
        - ip_config: onap_vpkg_vpg_vlb_ip_config
 #       - security_group: onap_network_security_group

    onap_dns_vlb_vdns_ip_config:
      type: aria.azure.nodes.network.IPConfiguration
      properties:
        name: dns_vlb_vdns_ip_config
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config: { get_input: dns_vlb_vdns_ip_config }
      requirements:
        - subnet: onap_virtual_vlb_vdns_subnet

    onap_dns_vlb_vdns_nic:
      type: aria.azure.nodes.network.NetworkInterfaceCard
      properties:
        name: dns_vlb_vdns_nic
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        resource_group_name: { get_input: azure_resource_group_name }
        primary: False
        resource_config:
          networkSecurityGroups: { get_input: azure_security_group }
          ipConfigurations: dns_vlb_vdns_ip_config
        use_external_resource: False
        azure_config: { get_input: azure_configuration }
      requirements:
        - resource_group: onap_resource_group
        - ip_config: onap_dns_vlb_vdns_ip_config
 #       - security_group: onap_network_security_group

    onap_lb_vpg_vlb_ip_config:
      type: aria.azure.nodes.network.IPConfiguration
      properties:
        name: lb_vpg_vlb_ip_config
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config: { get_input: lb_vpg_vlb_ip_config }
      requirements:
        - subnet: onap_virtual_vpg_vlb_subnet

    onap_lb_vpg_vlb_nic:
      type: aria.azure.nodes.network.NetworkInterfaceCard
      properties:
        name: lb_vpg_vlb_nic
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        resource_group_name: { get_input: azure_resource_group_name }
        primary: False
        resource_config:
          networkSecurityGroups: { get_input: azure_security_group }
          ipConfigurations: lb_vpg_vlb_ip_config
          enableIPForwarding: True
        use_external_resource: False
        azure_config: { get_input: azure_configuration }
      requirements:
        - resource_group: onap_resource_group
        - ip_config: onap_lb_vpg_vlb_ip_config
 #       - security_group: onap_network_security_group

    onap_lb_vlb_vdns_ip_config:
      type: aria.azure.nodes.network.IPConfiguration
      properties:
        name: lb_vlb_vdns_ip_config
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        azure_config: { get_input: azure_configuration }
        resource_group_name: { get_input: azure_resource_group_name }
        resource_config: { get_input: lb_vlb_vdns_ip_config }
      requirements:
        - subnet: onap_virtual_vlb_vdns_subnet

    onap_lb_vlb_vdns_nic:
      type: aria.azure.nodes.network.NetworkInterfaceCard
      properties:
        name: lb_vlb_vdns_nic
        location: { get_input: location }
        retry_after: { get_input: retry_after }
        resource_group_name: { get_input: azure_resource_group_name }
        primary: False
        resource_config:
          networkSecurityGroups: { get_input: azure_security_group }
          ipConfigurations: lb_vlb_vdns_ip_config
          enableIPForwarding: True
        use_external_resource: False
        azure_config: { get_input: azure_configuration }
      requirements:
        - resource_group: onap_resource_group
        - ip_config: onap_lb_vlb_vdns_ip_config
  #      - security_group: onap_network_security_group


    
    pg_vm:
      type: aria.azure.nodes.compute.VirtualMachine 
      properties:
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_vm }
        name: { get_input: pg_vm_name }
        location: { get_input: location }
        os_family: { get_input: vm_os_family }
        resource_config: { get_input: pg_vm_resource_config }
        resource_group_name: { get_input: azure_resource_group_name }
        retry_after: { get_input: retry_after } 
        agent_config:
          install_method: none
      requirements:
      - resource_group: onap_resource_group
      - nic: onap_pkg_nic_management_public
      - nic: onap_vpkg_vpg_vlb_nic
      - storage_account: onap_storage_account

    vpg_software_install:
      type: tosca.nodes.WebApplication
      requirements:
        - host: pg_vm
      interfaces:
        Standard:
          start:
            implementation:
              primary: scripts/vpg-azure.sh
              dependencies:
                - "ssh.user > { get_input: vm_os_username }"
                - "ssh.password > { get_input: vm_os_password }"
                - "ssh.address > { get_input: pg_azure_domain_fqdn }"
                - "ssh.use_sudo > True"
                - "process.env.vpg_private_ip_0 > { get_input: vpg_private_ip_0 }"
                - "process.env.vpg_private_ip_1 > { get_input: vpg_private_ip_1 }"
                - "process.env.repo_url_blob > { get_input: repo_url_blob }"
                - "process.env.repo_url_artifacts > { get_input: repo_url_artifacts }"
                - "process.env.demo_artifacts_version > { get_input: demo_artifacts_version }"
                - "process.env.install_script_version > { get_input: install_script_version }"
                - "process.env.cloud_env > { get_input: cloud_env }"
                - "process.env.vlb_private_ip_2 > { get_input: vlb_private_ip_2 }"
                - "process.env.pg_int > { get_input: pg_int }"
                - "process.env.azure_virtual_vpg_vlb_network_cidr > { get_input: azure_virtual_vpg_vlb_network_cidr }"
                - "process.env.azure_virtual_private_network_cidr > { get_input: azure_virtual_private_network_cidr }"
                - "process.env.vlb_mac > { get_input: vlb_mac }"
               
                
                

    lb_vm:
      type: aria.azure.nodes.compute.VirtualMachine 
      properties:
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_vm }
        name: { get_input: lb_vm_name }
        location: { get_input: location }
        os_family: { get_input: vm_os_family }
        resource_config: { get_input: lb_vm_resource_config }
        resource_group_name: { get_input: azure_resource_group_name }
        retry_after: { get_input: retry_after } 
        agent_config:
          install_method: none
      requirements:
      - resource_group: onap_resource_group
      - nic: onap_vlb_nic_management_public
      - nic: onap_lb_vpg_vlb_nic
      - nic: onap_lb_vlb_vdns_nic
      - storage_account: onap_storage_account

    vlb_software_install:
      type: tosca.nodes.WebApplication
      requirements:
        - host: lb_vm
      interfaces:
        Standard:
          start:
            implementation:
              primary: scripts/vlb-azure.sh
              dependencies:
                - "ssh.user > { get_input: vm_os_username }"
                - "ssh.password > { get_input: vm_os_password }"
                - "ssh.address > { get_input: lb_azure_domain_fqdn }"
                - "ssh.use_sudo > True"
                - "process.env.dcae_collector_ip > { get_input: dcae_collector_ip }"
                - "process.env.dcae_collector_port > { get_input: dcae_collector_port }"
                - "process.env.vlb_private_ip_0 > { get_input: vlb_private_ip_0 }"
                - "process.env.vlb_private_ip_1 > { get_input: vlb_private_ip_1 }"
                - "process.env.vlb_private_ip_2 > { get_input: vlb_private_ip_2 }"
                - "process.env.repo_url_blob > { get_input: repo_url_blob }"
                - "process.env.repo_url_artifacts > { get_input: repo_url_artifacts }"
                - "process.env.demo_artifacts_version > { get_input: demo_artifacts_version }"
                - "process.env.install_script_version > { get_input: install_script_version }"
                - "process.env.vip > { get_input: vip }"
                - "process.env.gre_ipaddr > { get_input: gre_ipaddr }"
                - "process.env.vpg_private_ip_0 > { get_input: vpg_private_ip_0 }"
                - "process.env.azure_virtual_vlb_vdns_network_cidr > { get_input: azure_virtual_vlb_vdns_network_cidr }"
                - "process.env.azure_virtual_vpg_vlb_network_cidr > { get_input: azure_virtual_vpg_vlb_network_cidr }"
                - "process.env.cloud_env > { get_input: cloud_env }"
                - "process.env.azure_virtual_private_network_cidr > { get_input: azure_virtual_private_network_cidr }"
                - "process.env.pg_mac > { get_input: pg_mac }"
                
                

    dns_vm:
      type: aria.azure.nodes.compute.VirtualMachine 
      properties:
        azure_config: { get_input: azure_configuration }
        use_external_resource: { get_input: use_existing_vm }
        name: { get_input: dns_vm_name }
        location: { get_input: location }
        os_family: { get_input: vm_os_family }
        resource_config: { get_input: dns_vm_resource_config }
        resource_group_name: { get_input: azure_resource_group_name }
        retry_after: { get_input: retry_after } 
        agent_config:
          install_method: none
      requirements:
      - resource_group: onap_resource_group
      - nic: onap_vdns_nic_management_public
      - nic: onap_dns_vlb_vdns_nic
      - storage_account: onap_storage_account

    vdns_software_install:
      type: tosca.nodes.WebApplication
      requirements:
        - host: dns_vm
      interfaces:
        Standard:
          start:
            implementation:
              primary: scripts/vdns-azure.sh
              dependencies:
                - "ssh.user > { get_input: vm_os_username }"
                - "ssh.password > { get_input: vm_os_password }"
                - "ssh.address > { get_input: dns_azure_domain_fqdn }"
                - "ssh.use_sudo > True"
                - "process.env.vlb_private_ip_0 > { get_input: vlb_private_ip_0 }"
                - "process.env.vlb_private_ip_1 > { get_input: vlb_private_ip_1 }"
                - "process.env.vdns_private_ip_0 > { get_input: vdns_private_ip_0 }"
                - "process.env.vdns_private_ip_1 > { get_input: vdns_private_ip_1 }"
                - "process.env.repo_url_artifacts > { get_input: repo_url_artifacts }"
                - "process.env.demo_artifacts_version > { get_input: demo_artifacts_version }"
                - "process.env.repo_url_blob > { get_input: repo_url_blob }"
                - "process.env.install_script_version > { get_input: install_script_version }"
                - "process.env.azure_virtual_vlb_vdns_network_cidr > { get_input: azure_virtual_vlb_vdns_network_cidr }"
                - "process.env.cloud_env > { get_input: cloud_env }"
                - "process.env.azure_virtual_private_network_cidr > { get_input: azure_virtual_private_network_cidr }"
                - "process.env.vpg_private_ip_0 > { get_input: vpg_private_ip_0 }"